apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'newrelic'

// We dynamically add the dependencies to avoid failures
tasks.build.dependsOn = []

android {
    compileSdkVersion 29
    buildToolsVersion buildToolsLevel

    dataBinding {
        enabled = true
    }

    repositories {
        mavenCentral()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "ar.gob.coronavirus"
        minSdkVersion minSdkLevel
        targetSdkVersion targetSdkLevel
        versionCode 140
        versionName "3.5.4" + (project.hasProperty("VERSION_CLASSIFIER") ? "-" + project.property("VERSION_CLASSIFIER") : "")

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "APP_NAME", "\"CuidAR\"")

        // Pin certificates
        buildConfigField("String", "CERTIFICADO_SHA1", "\"sha256/UXt/pC5LL5LT5C2ajleIfKh8FUrseWflM+tcO+284+o=\"")
        buildConfigField("String", "CERTIFICADO_SHA2", "\"sha256/JSMzqOOrtyOT1kmau6zKhgT676hGgczD5VMdRMyJZFA=\"")
        buildConfigField("String", "CERTIFICADO_SHA3", "\"sha256/++MBgDH5WGvL9Bcn5Be30cRcL0f5O+NyoXuWtQdX1aI=\"")
    }

    buildTypes {
        opensource {
            debuggable true
            signingConfig signingConfigs.debug
        }

        staging {
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        if (project.file("./src/${it.name}/build.gradle").exists()) {
            apply from: "./src/${it.name}/build.gradle"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.navigation:navigation-fragment:$navVersion"
    implementation "androidx.navigation:navigation-ui:$navVersion"
    implementation "androidx.security:security-crypto:$securityCryptoVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "com.google.android.material:material:$androidMaterialVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"

    //Firebase
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    //Otras
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "net.zetetic:android-database-sqlcipher:$sqlCipherVersion"
    implementation "commons-codec:commons-codec:$commonsCodecVersion"
    implementation "com.newrelic.agent.android:android-agent:$newRelicVersion"
    implementation "com.google.zxing:core:$zxingVersion"
    implementation("com.journeyapps:zxing-android-embedded:$zxingEmbeddedVersion") { transitive = false }

    //TEST
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitAndroidVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
}
